{"version":3,"sources":["service/env.tsx","service/api.tsx","service/history.tsx","service/modules/metron/auth.tsx","service/constants.tsx","service/modules/metron/services.tsx","service/modules/metron/schedulings.tsx","service/modules/metron/employees.tsx","service/modules/metron/customers.tsx","service/modules/metron/users.tsx","service/modules/metron/index.tsx","pages/login/Login.tsx","Firebase.tsx","pages/login/Register.tsx","pages/clients/ClientsList.tsx","pages/clients/ClientNew.tsx","pages/clients/ClientEdit.tsx","pages/employees/EmployeesList.tsx","pages/employees/EmployeNew.tsx","pages/employees/EmployeEdit.tsx","pages/employees/EmployeesFilter.tsx","pages/reports/Reports.tsx","pages/scheduling/SchedulingList.tsx","pages/scheduling/SchedulingCreate.tsx","pages/scheduling/SchedulingEdit.tsx","pages/users/UsersList.tsx","pages/users/UserNew.tsx","pages/users/UserEdit.tsx","pages/services/ServicesList.tsx","pages/services/ServiceNew.tsx","pages/services/ServiceEdit.tsx","pages/settings/Settings.tsx","pages/home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx","../node_modules/@ionic/core/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["getBaseUrl","project","envsBaseUrl","metron","development","production","projectTag","api","axios","create","baseURL","interceptors","request","use","reqConfig","authToken","service","auth","getToken","headers","Authorization","crossDomain","paramsSerializer","params","qs","stringify","arrayFormat","encode","response","resp","error","Promise","reject","history","createBrowserHistory","metronAPI","login","data","a","post","token","auth_token","setToken","localStorage","setItem","getItem","logout","push","removeItem","isAuthenticated","getUserIdFromToken","payload","JSON","parse","atob","split","Object","keys","get","serviceId","put","destroy","delete","schedulingId","employeeId","employe","customerId","customer","scheduling","employee","user","userId","Login","useState","setShowToast","setToastMessage","email","setEmail","password","setPassword","useHistory","trim","size","class","src","position","type","mode","placeholder","onIonChange","e","target","value","inputmode","color","expand","onClick","registerUser","console","log","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","cpassword","setCPassword","showToast","toastMessage","register","length","minlength","to","isOpen","onDidDismiss","message","duration","ClientsList","customers","setCustomers","useEffect","page","perPage","getCustomers","status","go","slot","auto-hide","icon","filter","map","key","id","name","last_name","phone","horizontal","vertical","trashOutline","edit","createOutline","routerLink","add","ClientNew","firstName","setFirstName","lastName","setLastName","setPhone","cpf","setCpf","required","inputMode","shape","ClientEdit","location","useLocation","state","EmployeesList","employees","setEmployees","employes","getEmployees","EmployeNew","EmployeEdit","EmployeesFilter","setName","filtering","names","Reports","SchedulingList","schedulings","setSchedulings","getSchedulings","Date","start","replace","toLocaleString","finish","SchedulingCreate","services","setServices","setEmployes","loadServices","per_page","loadEmployes","loadCustomers","then","finally","interface","display-format","picker-format","SchedulingEdit","setService","setEmploye","date","setDate","hour","setHour","detail","UsersList","users","setUsers","getUsers","UserNew","UserEdit","ServicesList","refresh","setRefresh","getServices","price","toFixed","convertToDecimal","ServiceNew","description","setDescription","setDuration","setPrice","Number","ServiceEdit","String","Settings","Home","App","side","content-id","book","person","people","briefcase","exit","path","component","exact","render","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","module","exports"],"mappings":"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","file":"static/js/main.0779e8a3.chunk.js","sourcesContent":["import { AUTH_TOKEN } from './constants'\nconst env = 'development'\n\nexport const getBaseUrl = (project: string) => envsBaseUrl['metron']['production']\n\nconst envsBaseUrl = {\n  metron: {\n    development: 'http://localhost:3001/api/v1/backoffice',\n    production: 'https://metron-api.herokuapp.com/api/v1/backoffice'\n  },\n}","import axios from 'axios';\nimport qs from 'qs';\nimport { getBaseUrl } from './env';\nimport * as service from './index';\n\nexport const create = (projectTag: any, treatError = true) => {\n  let api = axios.create({ baseURL: getBaseUrl(projectTag) })\n\n  api.interceptors.request.use((reqConfig) => {\n\n    const authToken = service.metron.auth.getToken()\n\n    if (authToken) {\n      reqConfig.headers.Authorization = `${authToken}`\n    }\n\n    reqConfig.headers.crossDomain = true\n\n    reqConfig.paramsSerializer = (params) => {\n      return qs.stringify(params, {\n        arrayFormat: 'brackets',\n        encode: false,\n      })\n    }\n\n    return reqConfig\n  })\n\n  api.interceptors.response.use(\n    (resp) => resp,\n    (error) => {\n      return Promise.reject(error)\n    },\n  )\n\n  return api\n}\n\nexport default { create }","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history","import api from '../../api';\n\nimport { AUTH_TOKEN } from '../../constants'\nimport history from '../../history'\n\n\nconst metronAPI = api.create('metron', false)\n\nconst login = async (data: any) => {\n    const response = await metronAPI.post('/authentication', data)\n    const token = response.data.auth_token\n\n    setToken(token)\n\n    return response\n}\n\nconst setToken = (token: any) => {\n    localStorage.setItem(AUTH_TOKEN, token)\n}\n\nconst getToken = () => {\n    return localStorage.getItem(AUTH_TOKEN)\n}\n\n\nconst logout = () => {\n    history.push('/')\n    localStorage.removeItem(AUTH_TOKEN)\n}\n\n// Este metodo precisa ser ajustado\nconst getUserIdFromToken = () => {\n    const token = getToken()\n    const payload = JSON.parse(atob(token.split('.')[1]))\n    let keys = Object.keys(payload)\n  \n    // return payload.userID\n}\n\nconst isAuthenticated = () => {\n    const token = getToken()\n    return !!token\n}\n\nexport default {\n    login,\n    logout,\n    getToken,\n    setToken,\n    isAuthenticated,\n    getUserIdFromToken,\n}","export const AUTH_TOKEN = '@metron-auth-token'","import api from '../../api'\n\nconst metronAPI = api.create('metron')\n\nconst get = async ({ serviceId = '', ...params }) => {\n  return await metronAPI.get(`/services/${serviceId}`, { params })\n}\n\nconst post = async ({ ...service }) => {\n  return await metronAPI.post('/services', { service })\n}\n\nconst put = async ({ serviceId = '', ...service }) => {\n  return await metronAPI.put(`/services/${serviceId}`, { service })\n}\n\nconst destroy = async ({ serviceId = '' }) => {\n  return await metronAPI.delete(`/services/${serviceId}`)\n}\n\nexport default {\n  get,\n  post,\n  put,\n  destroy\n}\n","import api from '../../api'\n\nconst metronAPI = api.create('metron')\n\nconst get = async ({ schedulingId = '', ...params }) => {\n  return await metronAPI.get(`/schedulings/${schedulingId}`, { params })\n}\n\nconst destroy = async ({ schedulingId = '' }) => {\n  return await metronAPI.delete(`/schedulings/${schedulingId}`)\n}\n\nexport default {\n  get,\n  destroy\n}\n","import api from '../../api'\n\nconst metronAPI = api.create('metron')\n\nconst get = async ({ employeeId = '', ...params }) => {\n  return await metronAPI.get(`/employes/${employeeId}`, { params })\n}\n\nconst post = async ({ ...employe }) => {\n  return await metronAPI.post('/employes', { employe })\n}\n\nconst put = async ({ employeeId = '', ...employe }) => {\n  return await metronAPI.put(`/employes/${employeeId}`, { employe })\n}\n\nconst destroy = async ({ employeeId = '' }) => {\n  return await metronAPI.delete(`/employes/${employeeId}`)\n}\n\nexport default {\n  get,\n  post,\n  put,\n  destroy\n}\n","import api from '../../api'\n\nconst metronAPI = api.create('metron')\n\nconst get = async ({ customerId = '', ...params }) => {\n  return await metronAPI.get(`/customers/${customerId}`, { params })\n}\n\nconst post = async ({ ...customer }) => {\n  return await metronAPI.post('/customers', { customer })\n}\n\nconst put = async ({ customerId = '', ...customer }) => {\n  return await metronAPI.put(`/customers/${customerId}`, { customer })\n}\n\nconst destroy = async ({ customerId = '' }) => {\n  return await metronAPI.delete(`/customers/${customerId}`)\n}\n\nexport default {\n  get,\n  post,\n  put,\n  destroy\n}\n","import api from '../../api'\n\nconst metronAPI = api.create('metron')\n\nconst get = async ({ userId = '', ...params }) => {\n  return await metronAPI.get(`/users/${userId}`, { params })\n}\n\nconst post = async ({ ...user }) => {\n  return await metronAPI.post('/users', { user })\n}\n\nconst put = async ({ userId = '', ...user }) => {\n  return await metronAPI.put(`/users/${userId}`, { user })\n}\n\nconst destroy = async ({ userId = '' }) => {\n  return await metronAPI.delete(`/users/${userId}`)\n}\n\nexport default {\n  get,\n  post,\n  put,\n  destroy\n}\n","import auth from './auth'\nimport service from './services'\nimport scheduling from './schedulings'\nimport employee from './employees'\nimport customer from './customers'\nimport user from './users'\n\nexport default {\n    auth,\n    service,\n    scheduling,\n    employee,\n    customer,\n    user\n}","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { loginUser } from '../../Firebase'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonRouterLink,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst Login: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const login = async () => {\n    if (email.trim() === '' || password.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    try {\n      await service.metron.auth.login({email: email, password: password})\n      setToastMessage('Login realizado com sucesso')\n      setShowToast(true)\n      history.push('/schedulinglist')\n    } catch (e) {\n      setToastMessage('Falha ao realizar login')\n      return setShowToast(true)\n    }\n  }\n\n  const forgotPassword = async () => {\n    setToastMessage('Uma nova senha foi encaminhada para o e-mail inserido.')\n    setShowToast(true)\n  }\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <IonCol size=\"12\" class=\"d-flex justify-content-center\">\n              <IonImg class=\"img-size\" src=\"assets/icon/metron.png\" />\n            </IonCol>\n            <IonCol size=\"12\">\n              <IonItem>\n                <IonLabel position=\"floating\" class=\"pl-2 input-text-color\">E-mail</IonLabel>\n                <IonInput\n                  type=\"email\"\n                  mode=\"md\"\n                  class=\"pl-2\"\n                  placeholder=\"email@example.com\"\n                  onIonChange={(e: any) => setEmail(e.target.value)}\n                  inputmode=\"email\" />\n              </IonItem>\n            </IonCol>\n            <IonCol size=\"12\">\n              <IonItem>\n                <IonLabel position=\"floating\" class=\"pl-2 input-text-color\">Senha</IonLabel>\n                <IonInput\n                  type=\"password\"\n                  mode=\"md\"\n                  onIonChange={(e: any) => setPassword(e.target.value)}\n                  class=\"pl-2\" />\n              </IonItem>\n            </IonCol>\n            <IonCol size=\"12\" class=\"px-3\">\n              <IonButton color=\"primary\" mode=\"md\" expand=\"block\" onClick={login}>Entrar</IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default Login","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyCTCgOnId0jZ2dKXYo9G708wBxQ3AMU2EQ\",\n  authDomain: \"barbershop-9948a.firebaseapp.com\",\n  databaseURL: \"https://barbershop-9948a.firebaseio.com\",\n  projectId: \"barbershop-9948a\",\n  storageBucket: \"barbershop-9948a.appspot.com\",\n  messagingSenderId: \"64987752014\",\n  appId: \"1:64987752014:web:9f7300a2552d093259051f\"\n}\n\nfirebase.initializeApp(config)\n\nexport async function loginUser(email: string, password: string) {\n  try {\n    // const res = await firebase.auth().signInWithEmailAndPassword(email, password)\n    // console.log(res)\n    return true\n  } catch (error) {\n    console.log(error)\n    return false\n  }\n}\n\nexport async function registerUser(email: string, password: string) {\n  try {\n    //const res = await firebase.auth().createUserWithEmailAndPassword(email, password)\n    return true\n  } catch (error) {\n    console.log(error)\n    return false\n  }\n}\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { registerUser } from '../../Firebase'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonGrid,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nconst Register: React.FC = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [cpassword, setCPassword] = useState('')\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const history = useHistory()\n\n  const register = async () => {\n    if(email.trim() === '' || password.trim() === '' || cpassword.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if (password !== cpassword) {\n      setToastMessage('As senhas não coincidem')\n      return setShowToast(true)\n    }\n\n    if (password.length < 6) {\n      setToastMessage('A senha deve possuir no mínimo 6 caracteres')\n      return setShowToast(true)\n    }\n\n    const res = await registerUser(email, password)\n\n    if (res) {\n      setToastMessage('Cadastro realizado com sucesso')\n      setShowToast(true)\n      history.push(\"/home\");\n    } else {\n      setToastMessage('Falha ao realizar cadastro')\n      return setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <IonCol size=\"12\" class=\"d-flex justify-content-center\">\n              <IonImg class=\"img-size\" src=\"assets/icon/metron.png\" />\n            </IonCol>\n            <IonCol size=\"12\">\n              <IonItem>\n                <IonLabel position=\"floating\" class=\"pl-2 input-text-color\">E-mail</IonLabel>\n                <IonInput\n                  type=\"email\"\n                  mode=\"md\"\n                  class=\"pl-2\"\n                  placeholder=\"email@example.com\"\n                  onIonChange={(e: any) => setEmail(e.target.value)}\n                  inputmode=\"email\" />\n              </IonItem>\n            </IonCol>\n            <IonCol size=\"12\">\n              <IonItem>\n                <IonLabel position=\"floating\" class=\"pl-2 input-text-color\">Senha</IonLabel>\n                <IonInput\n                  type=\"password\"\n                  minlength={6}\n                  mode=\"md\"\n                  onIonChange={(e: any) => setPassword(e.target.value)}\n                  class=\"pl-2\" />\n              </IonItem>\n            </IonCol>\n            <IonCol size=\"12\">\n              <IonItem>\n                <IonLabel position=\"floating\" class=\"pl-2 input-text-color\">Confirme a senha</IonLabel>\n                <IonInput\n                  type=\"password\"\n                  minlength={6}\n                  mode=\"md\"\n                  onIonChange={(e: any) => setCPassword(e.target.value)}\n                  class=\"pl-2\" />\n              </IonItem>\n            </IonCol>\n            <IonCol size=\"12\" class=\"px-3\">\n              <IonButton color=\"primary\" mode=\"md\" expand=\"block\" onClick={register}>Registrar</IonButton>\n            </IonCol>\n            <IonCol size=\"12\" class=\"px-3\">\n              <p>Já possui uma conta? <Link to=\"/login\">Logar</Link></p>\n            </IonCol>\n            <IonCol size=\"12\">\n              <IonToast\n                isOpen={showToast}\n                onDidDismiss={() => setShowToast(false)}\n                message={toastMessage}\n                duration={2000}\n              />\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default Register","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonToast,\n  IonCardContent,\n  IonIcon,\n  IonButton,\n  IonMenuButton,\n  IonFab,\n  IonFabButton,\n  IonButtons,\n  IonActionSheet,\n  IonList\n} from '@ionic/react';\nimport { filter, add, ellipsisVertical, trashOutline, createOutline } from 'ionicons/icons';\n\nimport * as service from '../../service/index'\n\nconst ClientsList: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [showActionSheet, setShowActionSheet] = useState(false);\n  const [customers, setCustomers] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const getCustomers = async () => {\n      let response = await service.metron.customer.get({customerId: '', page: '1', perPage: '100'})\n      setCustomers(response && response.data && response.data.customers)\n    }\n    \n    getCustomers()\n  }, [])\n\n  console.log(customers)\n\n  const edit = (customer: any) => {\n    history.push('/clients/edit', customer)\n  }\n\n  const destroy = async (customerId: any) => {\n    let response = await service.metron.customer.destroy({customerId: customerId})\n\n    if(response.status = 200) {\n      setToastMessage('Cliente excluído com sucesso')\n      setShowToast(true)\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonButtons slot=\"primary\">\n            <IonButton>\n              <IonIcon icon={filter} />\n            </IonButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Clientes</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonGrid>\n          <IonList>\n            {customers && customers.map((customer) => (\n              <IonCard key={customer.id}>\n                <IonRow>\n                  <IonCol >\n                    <IonCardHeader>\n                      <IonCardTitle>{customer.name} {customer.last_name}</IonCardTitle>\n                      <IonCardSubtitle>{customer.phone}</IonCardSubtitle>\n                    </IonCardHeader>\n                    <IonCardContent>{customer.email}</IonCardContent>\n                  </IonCol>\n                  <IonFab horizontal=\"end\" vertical=\"top\">\n                    <IonButtons>\n                      <IonButton onClick={() => destroy(customer.id)}>\n                        <IonIcon icon={trashOutline} />\n                      </IonButton>\n                      <IonButton onClick={() => edit(customer)}>\n                        <IonIcon icon={createOutline} />\n                      </IonButton>\n                    </IonButtons>\n                  </IonFab>\n                </IonRow>\n              </IonCard>\n            ))}\n          </IonList>\n\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonFabButton routerLink=\"/clients/new\">\n              <IonIcon icon={add} />\n            </IonFabButton>\n          </IonFab>\n\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ClientsList","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst ClientNew: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [email, setEmail] = useState('')\n  const [cpf, setCpf] = useState('')\n  const history = useHistory()\n\n  const create = async () => {\n    if (firstName.trim() === '' || lastName.trim() === '' || phone.trim() === '' || email.trim() === '' || cpf.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if(cpf.trim().length != 11) {\n      setToastMessage('CPF inválido')\n      return setShowToast(true)\n    }\n\n    let params = {\n      name: firstName,\n      last_name: lastName,\n      phone: phone,\n      email: email,\n      cpf: cpf\n    }\n\n    let response = await service.metron.customer.post(params)\n\n    if(response.status == 201){\n      setToastMessage('Cliente cadastrado com sucesso')\n      setShowToast(true)\n      history.push('/clientslist')\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n          <IonToolbar>\n              <IonButtons slot=\"start\">\n                  <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n              </IonButtons>\n              <IonTitle class=\"text-center\">Cadastrar Cliente</IonTitle>\n          </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"João\"\n                      onIonChange={(e: any) => setFirstName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Sobrenome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"Bueno\"\n                      onIonChange={(e: any) => setLastName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"joao.bueno@example.com\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">CPF(somente os números)</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"47045567814\"\n                      onIonChange={(e: any) => setCpf(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Telefone</IonLabel>\n                    <IonInput\n                      type=\"tel\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      inputMode=\"tel\"\n                      placeholder=\"(14) 99999-9999\"\n                      onIonChange={(e: any) => setPhone(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n         <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={create} shape=\"round\">Cadastrar</IonButton>\n        </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default ClientNew","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst ClientEdit: React.FC = () => {\n  var location:any = useLocation()\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [email, setEmail] = useState('')\n  const [cpf, setCpf] = useState('')\n  const history = useHistory()\n\n  useEffect(() => {\n    if(location.state) {\n      setFirstName(location.state.name)\n      setLastName(location.state.last_name)\n      setPhone(location.state.phone)\n      setEmail(location.state.email)\n      setCpf(location.state.cpf)\n    }\n  }, [location])\n\n  const edit = async () => {\n    if (firstName.trim() === '' || lastName.trim() === '' || phone.trim() === '' || email.trim() === '' || cpf.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if(cpf.trim().length != 11) {\n      setToastMessage('CPF inválido')\n      return setShowToast(true)\n    }\n\n    if(phone.trim().length < 14 || phone.trim().length > 15) {\n      setToastMessage('Telefone inválido')\n      return setShowToast(true)\n    }\n\n    let response = await service.metron.customer.put({ customerId: location.state.id, name: firstName, last_name: lastName, phone: phone, email: email, cpf: cpf })\n\n    if(response.status == 200){\n      setToastMessage('Cliente atualizado com sucesso')\n      setShowToast(true)\n      history.push('/clientslist')\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n          <IonToolbar>\n              <IonButtons slot=\"start\">\n                  <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n              </IonButtons>\n              <IonTitle class=\"text-center\">Editar Cliente</IonTitle>\n          </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={firstName}\n                      placeholder=\"João\"\n                      onIonChange={(e: any) => setFirstName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Sobrenome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={lastName}\n                      placeholder=\"Bueno\"\n                      onIonChange={(e: any) => setLastName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={email}\n                      placeholder=\"joao.bueno@example.com\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">CPF(somente os números)</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={cpf}\n                      placeholder=\"47045567814\"\n                      onIonChange={(e: any) => setCpf(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Telefone</IonLabel>\n                    <IonInput\n                      type=\"tel\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={phone}\n                      inputMode=\"tel\"\n                      placeholder=\"(14) 99999-9999\"\n                      onIonChange={(e: any) => setPhone(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n         <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={edit} shape=\"round\">Salvar</IonButton>\n        </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default ClientEdit","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  IonRow,\n  IonToast,\n  IonCol,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonCard,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n  IonIcon,\n  IonButton,\n  IonMenuButton,\n  IonFab,\n  IonFabButton,\n  IonButtons,\n  IonActionSheet,\n  IonList\n} from '@ionic/react';\nimport { filter, add, ellipsisVertical, trashOutline, createOutline } from 'ionicons/icons';\n\nimport * as service from '../../service/index'\n\nconst EmployeesList: React.FC = () => {\n  const [showActionSheet, setShowActionSheet] = useState(false);\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [employees, setEmployees] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const getEmployees = async () => {\n      let response = await service.metron.employee.get({employeeId: '', page: '1', perPage: '100'})\n      setEmployees(response && response.data && response.data.employes)\n    }\n    \n    getEmployees()\n  }, [])\n\n  console.log(employees)\n\n  const edit = (employee: any) => {\n    history.push('/employes/edit', employee)\n  }\n\n  const destroy = async (employeeId: any) => {\n    let response = await service.metron.employee.destroy({employeeId: employeeId})\n\n    if(response.status = 200) {\n      setToastMessage('Funcionário excluído com sucesso')\n      setShowToast(true)\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonButtons slot=\"primary\">\n            <IonButton routerLink=\"/employeesfilter\">\n              <IonIcon icon={filter} />\n            </IonButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Funcionários</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonGrid>\n          <IonList>\n            {employees && employees.map((employee) => (\n              <IonCard key={employee.id}>\n                <IonRow>\n                  <IonCol >\n                    <IonCardHeader>\n                      <IonCardTitle>{employee.name} {employee.last_name}</IonCardTitle>\n                      <IonCardSubtitle>{employee.email}</IonCardSubtitle>\n                    </IonCardHeader>\n                    <IonCardContent>{employee.phone}</IonCardContent>\n                  </IonCol>\n                  <IonFab horizontal=\"end\" vertical=\"top\">\n                    <IonButtons>\n                      <IonButton onClick={() => destroy(employee.id)}>\n                        <IonIcon icon={trashOutline} />\n                      </IonButton>\n                      <IonButton onClick={() => edit(employee)}>\n                        <IonIcon icon={createOutline} />\n                      </IonButton>\n                    </IonButtons>\n                  </IonFab>\n                </IonRow>\n              </IonCard>\n            ))}\n          </IonList>\n\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonFabButton routerLink=\"/employes/new\">\n              <IonIcon icon={add} />\n            </IonFabButton>\n          </IonFab>\n\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default EmployeesList","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst EmployeNew: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [email, setEmail] = useState('')\n  const history = useHistory()\n\n  const create = async () => {\n    if (firstName.trim() === '' || lastName.trim() === '' || phone.trim() === '' || email.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if (phone.trim().length < 14 || phone.trim().length > 15) {\n      setToastMessage('Telefone inválido')\n      return setShowToast(true)\n    }\n\n    let params = {\n      name: firstName,\n      last_name: lastName,\n      phone: phone,\n      email: email\n    }\n\n    let response = await service.metron.employee.post(params)\n\n    if(response.status == 201){\n      setToastMessage('Funcionário cadastrado com sucesso')\n      setShowToast(true)\n      history.push('/employeeslist')\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Cadastrar Funcionário</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"João\"\n                      onIonChange={(e: any) => setFirstName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Sobrenome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"Bueno\"\n                      onIonChange={(e: any) => setLastName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"joao.bueno@example.com\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Telefone</IonLabel>\n                    <IonInput\n                      type=\"tel\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      inputMode=\"tel\"\n                      placeholder=\"(14) 99999-9999\"\n                      onIonChange={(e: any) => setPhone(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={create} shape=\"round\">Cadastrar</IonButton>\n          </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default EmployeNew","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst EmployeEdit: React.FC = () => {\n  var location:any = useLocation()\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [email, setEmail] = useState('')\n  const history = useHistory()\n\n  useEffect(() => {\n    if(location.state) {\n      setFirstName(location.state.name)\n      setLastName(location.state.last_name)\n      setPhone(location.state.phone)\n      setEmail(location.state.email)\n    }\n  }, [location])\n\n  const edit = async () => {\n    if (firstName.trim() === '' || lastName.trim() === '' || phone.trim() === '' || email.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if (phone.trim().length < 14 || phone.trim().length > 15) {\n      setToastMessage('Telefone inválido')\n      return setShowToast(true)\n    }\n\n    let response = await service.metron.employee.put({ employeeId: location.state.id, name: firstName, last_name: lastName, phone: phone, email: email })\n\n    if(response.status == 200){\n      setToastMessage('Funcionário atualizado com sucesso')\n      setShowToast(true)\n      history.push('/employeeslist')\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Editar Funcionário</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={firstName}\n                      placeholder=\"João\"\n                      onIonChange={(e: any) => setFirstName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Sobrenome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={lastName}\n                      placeholder=\"Bueno\"\n                      onIonChange={(e: any) => setLastName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={email}\n                      placeholder=\"joao.bueno@example.com\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Telefone</IonLabel>\n                    <IonInput\n                      type=\"tel\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      value={phone}\n                      inputMode=\"tel\"\n                      placeholder=\"(14) 99999-9999\"\n                      onIonChange={(e: any) => setPhone(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={edit} shape=\"round\">Salvar</IonButton>\n          </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default EmployeEdit","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport {\n    IonContent,\n    IonPage,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonCard,\n    IonCardHeader,\n    IonCardSubtitle,\n    IonCardTitle,\n    IonCardContent,\n    IonIcon,\n    IonButton,\n    IonMenuButton,\n    IonFab,\n    IonFabButton,\n    IonButtons,\n    IonActionSheet,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonInput\n} from '@ionic/react';\nimport { filter, add, ellipsisVertical, trashOutline, createOutline } from 'ionicons/icons';\n\nimport * as service from '../../service/index'\n\nconst EmployeesFilter: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const history = useHistory()\n\n  const filtering = async () => {\n    let names = name.split(\" \")\n    let response = await service.metron.employee.get({employeeId: '', page: '1', perPage: '100', name: names[0], last_name: names[1], email: email, phone:phone })\n\n    if(response.status == 200) {\n      //ver o que fazer apos o filtro retornar\n      \n    }\n  }\n\n  const [showActionSheet, setShowActionSheet] = useState(false);\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonButtons slot=\"primary\">\n            <IonButton>\n              <IonIcon icon={filter} />\n            </IonButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Funcionários</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonRow>\n              <IonCol>\n                <IonCardHeader>\n                  <IonItem>\n                    <IonLabel position=\"floating\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      placeholder=\"Nome\"\n                      onIonChange={(e: any) => setName(e.target.value)} />\n                  </IonItem>\n\n                  <IonItem>\n                    <IonLabel position=\"floating\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"email\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      placeholder=\"E-mail\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                  <IonItem>\n                    <IonLabel position=\"floating\">Telefone</IonLabel>\n                    <IonInput\n                      type=\"tel\"\n                      mode=\"md\"\n                      class=\"pl-2\"\n                      inputMode=\"tel\"\n                      placeholder=\"(14) 99999-9999\"\n                      onIonChange={(e: any) => setPhone(e.target.value)} />\n                  </IonItem>\n                </IonCardHeader>\n              </IonCol>\n            </IonRow>\n          </IonCard>\n\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton shape=\"round\" onClick={filtering}>\n              <IonLabel>FILTRAR</IonLabel>\n            </IonButton>\n          </IonFab>\n\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default EmployeesFilter\n","import React from 'react';\nimport {\n  IonContent,\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonMenuButton,\n  IonButtons\n} from '@ionic/react';\n\nconst Reports: React.FC = () => {\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Relatórios</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Reports","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonCard,\n  IonToast,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n  IonIcon,\n  IonButton,\n  IonMenuButton,\n  IonFabButton,\n  IonFab,\n  IonActionSheet,\n  IonButtons,\n  IonList\n} from '@ionic/react';\nimport { filter, add, createOutline, trashOutline, ellipsisVertical } from 'ionicons/icons';\n\nimport * as service from '../../service/index'\n\nconst SchedulingList: React.FC = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('')\n  const [showActionSheet, setShowActionSheet] = useState(false);\n  const [schedulings, setSchedulings] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const getSchedulings = async () => {\n      let response = await service.metron.scheduling.get({schedulingId: '', page: '1', perPage: '100'})\n      setSchedulings(response && response.data && response.data.schedulings)\n    }\n    \n    getSchedulings()\n  }, [])\n\n  console.log(schedulings)\n\n  const edit = () => {\n    history.push('/schedulingedit')\n  }\n\n  const destroy = async (schedulingId: any) => {\n    let response = await service.metron.scheduling.destroy({schedulingId: schedulingId})\n\n    if(response.status = 200) {\n      setToastMessage('Agendamento excluído com sucesso')\n      setShowToast(true)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonButtons slot=\"primary\">\n            <IonButton>\n              <IonIcon icon={filter} />\n            </IonButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Agendamentos</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonList>\n            {schedulings && schedulings.map((scheduling) => (\n              <IonCard key={scheduling.id}>\n                <IonRow>\n                  <IonCol >\n                    <IonCardHeader>\n                      <IonCardTitle>{scheduling.service.name}</IonCardTitle>\n                      <IonCardSubtitle>Cliente:{scheduling.customer.name}</IonCardSubtitle>\n                      <IonCardSubtitle>Funcionário:{scheduling.employe.name}</IonCardSubtitle>\n                      <IonCardSubtitle>{(new Date(scheduling.start.replace(\".000Z\", \"\"))).toLocaleString()} - {(new Date(scheduling.finish.replace(\".000Z\", \"\"))).toLocaleString()}</IonCardSubtitle>\n                    </IonCardHeader>\n                  </IonCol>\n                  <IonFab horizontal=\"end\" vertical=\"top\">\n                    <IonButtons>\n                      <IonButton onClick={() => destroy(scheduling.id)}>\n                        <IonIcon icon={trashOutline} />\n                      </IonButton>\n                    </IonButtons>\n                  </IonFab>\n                </IonRow>\n              </IonCard>\n            ))}\n          </IonList>\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonFabButton routerLink=\"/schedulingcreate\">\n              <IonIcon icon={add} />\n            </IonFabButton>\n          </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SchedulingList","import React, { useState, useEffect } from 'react';\nimport {\n    IonContent,\n    IonItem,\n    IonPage,\n    IonInput,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonCard,\n    IonCardHeader,\n    IonButton,\n    IonMenuButton,\n    IonSelectOption,\n    IonSelect,\n    IonDatetime,\n    IonFab,\n    IonFooter,\n    IonButtons\n} from '@ionic/react';\n\nimport * as service from '../../service/index'\n\nconst SchedulingCreate: React.FC = () => {\n    const [services, setServices] = useState([])\n    const [employes, setEmployes] = useState([])\n    const [customers, setCustomers] = useState([])\n    const [showEmployeSelect, setShowEmployeSelect] = useState(false)\n\n    useEffect(() => {\n        const loadServices = async () => {\n            let response = await service.metron.service.get({ serviceId: '', per_page: '100' })\n            setServices(response.data.services)\n        }\n\n        const loadEmployes = async () => {\n            let response = await service.metron.employee.get({ employeeId: '', per_page: '100' })\n            setEmployes(response.data.employes)\n        }\n\n        const loadCustomers = async () => {\n            let response = await service.metron.customer.get({ customerId: '', per_page: '100' })\n            setCustomers(response.data.customers)\n        }\n\n        loadServices().then(() => {\n            loadEmployes().finally(() => {\n                loadCustomers()\n            })\n        })\n    }, [])\n\n    return (\n        <IonPage>\n\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot=\"start\">\n                        <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n                    </IonButtons>\n                    <IonTitle class=\"text-center\">Agendar</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n\n            <IonContent>\n                <IonGrid>\n                    <IonCard>\n                        <IonRow>\n                            <IonCol >\n                                <IonCardHeader>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Cliente</IonLabel>\n                                        <IonSelect interface=\"popover\">\n                                            {customers.map((customer) => {\n                                                return <IonSelectOption>{customer.name}</IonSelectOption>\n                                            })}\n                                        </IonSelect>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Serviço</IonLabel>\n                                        <IonSelect interface=\"popover\">\n                                            {services.map((service) => {\n                                                return <IonSelectOption>{service.name}</IonSelectOption>\n                                            })}\n                                        </IonSelect>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Funcionário</IonLabel>\n                                        <IonSelect interface=\"popover\">\n                                            {employes.map((employe) => {\n                                                return <IonSelectOption>{employe.name}</IonSelectOption>\n                                            })}\n                                        </IonSelect>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Data</IonLabel>\n                                        <IonDatetime display-format=\"DD/MM/YYYY\" picker-format=\"DD/MM/YYYY\"></IonDatetime>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Hora</IonLabel>\n                                        <IonDatetime display-format=\"HH:mm\" picker-format=\"HH:mm\" ></IonDatetime>\n                                    </IonItem>\n                                </IonCardHeader>\n                            </IonCol>\n                        </IonRow>\n                    </IonCard>\n\n                    <IonFab horizontal=\"end\" vertical=\"bottom\">\n                        <IonButton routerLink=\"/schedulingList\" shape=\"round\">Agendar</IonButton>\n                    </IonFab>\n\n                </IonGrid>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default SchedulingCreate","import React, { useState } from 'react';\nimport {\n    IonContent,\n    IonItem,\n    IonPage,\n    IonInput,\n    IonLabel,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonCard,\n    IonCardHeader,\n    IonButton,\n    IonMenuButton,\n    IonSelectOption,\n    IonSelect,\n    IonDatetime,\n    IonFab,\n    IonFooter,\n    IonButtons\n} from '@ionic/react';\n\nconst SchedulingEdit: React.FC = () => {\n  const [name, setName] = useState('João Silva')\n  const [phone, setPhone] = useState('(14) 99999-9999')\n  const [service, setService] = useState('Corte de Barba')\n  const [employe, setEmploye] = useState('Luiz')\n  const [date, setDate] = useState('2020/12/25')\n  const [hour, setHour] = useState('14:22')\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot=\"start\">\n                        <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n                    </IonButtons>\n                    <IonTitle class=\"text-center\">Agendar</IonTitle>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent>\n                <IonGrid>\n                    <IonCard>\n                        <IonRow>\n                            <IonCol >\n                                <IonCardHeader>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Nome</IonLabel>\n                                        <IonInput\n                                          type=\"text\"\n                                          mode=\"md\"\n                                          class=\"pl-2\"\n                                          value={name}\n                                          onIonChange={(e: any) => setName(e.target.value)} />\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Contato</IonLabel>\n                                        <IonInput\n                                          type=\"tel\"\n                                          mode=\"md\"\n                                          class=\"pl-2\"\n                                          value={phone} />\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Serviço</IonLabel>\n                                        <IonSelect value={service} onIonChange={e => setService(e.detail.value)} interface=\"popover\">\n                                            <IonSelectOption>Corte de Barba</IonSelectOption>\n                                            <IonSelectOption>Corte de Cabelo</IonSelectOption>\n                                        </IonSelect>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Funcionário</IonLabel>\n                                        <IonSelect value={employe} onIonChange={e => setEmploye(e.detail.value)} interface=\"popover\">\n                                            <IonSelectOption>Luiz</IonSelectOption>\n                                            <IonSelectOption>José</IonSelectOption>\n                                        </IonSelect>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Data</IonLabel>\n                                        <IonDatetime display-format=\"DD/MM/YYYY\" value={date} onIonChange={e => setDate(e.detail.value!)} picker-format=\"DD/MM/YYYY\"></IonDatetime>\n                                    </IonItem>\n                                    <IonItem>\n                                        <IonLabel position=\"floating\">Hora</IonLabel>\n                                        <IonDatetime display-format=\"HH:mm\" value={hour} onIonChange={e => setHour(e.detail.value!)} picker-format=\"HH:mm\" ></IonDatetime>\n                                    </IonItem>\n                                </IonCardHeader>\n                            </IonCol>\n                        </IonRow>\n                    </IonCard>\n\n                    <IonFab horizontal=\"end\" vertical=\"bottom\">\n                        <IonButton routerLink=\"/schedulingList\" shape=\"round\">Atualizar Agendamento</IonButton>\n                    </IonFab>\n                </IonGrid>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default SchedulingEdit","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonCard,\n  IonToast,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n  IonIcon,\n  IonButton,\n  IonMenuButton,\n  IonFab,\n  IonFabButton,\n  IonButtons,\n  IonActionSheet,\n  IonList\n} from '@ionic/react';\nimport { filter, add, ellipsisVertical, trashOutline, createOutline } from 'ionicons/icons';\n\nimport * as service from '../../service/index'\n\nconst UsersList: React.FC = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('')\n  const [showActionSheet, setShowActionSheet] = useState(false);\n  const [loading, setLoading] = useState(false)\n  const [users, setUsers] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const getUsers = async () => {\n      let response = await service.metron.user.get({userId: '', page: '1', perPage: '100'})\n      setUsers(response && response.data && response.data.users)\n    }\n    \n    getUsers()\n  }, [])\n\n  console.log(users)\n\n  const edit = (user: any) => {\n    history.push('/user/edit', user)\n  }\n\n   const destroy = async (user: any) => {\n    let response = await service.metron.user.destroy({userId: user})\n\n    if(response.status == 200) {\n      setToastMessage('Usuário excluído com sucesso')\n      setShowToast(true)\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonButtons slot=\"primary\">\n            <IonButton>\n              <IonIcon icon={filter} />\n            </IonButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Usuários</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonGrid>\n          <IonList>\n            {users && users.map((user) => (\n              <IonCard key={user.id}>\n                <IonRow>\n                  <IonCol >\n                    <IonCardHeader>\n                      <IonCardTitle>{user.name}</IonCardTitle>\n                      <IonCardSubtitle>{user.email}</IonCardSubtitle>\n                    </IonCardHeader>\n                  </IonCol>\n                  <IonFab horizontal=\"end\" vertical=\"top\">\n                    <IonButtons>\n                      <IonButton onClick={() => destroy(user.id)}>\n                        <IonIcon icon={trashOutline} />\n                      </IonButton>\n                      <IonButton onClick={() => edit(user)}>\n                        <IonIcon icon={createOutline} />\n                      </IonButton>\n                    </IonButtons>\n                  </IonFab>\n                </IonRow>\n              </IonCard>\n            ))}\n          \n          </IonList>\n\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonFabButton routerLink=\"/users/new\">\n              <IonIcon icon={add} />\n            </IonFabButton>\n          </IonFab>\n\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default UsersList","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst UserNew: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  const create = async () => {\n    if (name.trim() === '' || email.trim() === '' || password.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    let params = {\n      name: name,\n      email: email,\n      password: password\n    }\n\n    try{\n      let response = await service.metron.user.post(params)\n\n      setToastMessage('Usuário cadastrado com sucesso')\n      setShowToast(true)\n      history.push('/userslist')\n      history.go(0)\n    } catch(e) {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Cadastrar Usuário</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"João\"\n                      onIonChange={(e: any) => setName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"joão@gmail.com\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Senha</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"\"\n                      onIonChange={(e: any) => setPassword(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={create} shape=\"round\">Cadastrar</IonButton>\n          </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default UserNew","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst UserEdit: React.FC = () => {\n  var location:any = useLocation()\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const history = useHistory()\n\n  useEffect(() => {\n    if(location.state) {\n      setName(location.state.name)\n      setEmail(location.state.email)\n    }\n  }, [location])\n\n  const edit = async () => {\n    if (name.trim() === '' || email.trim() === '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    let response = await service.metron.user.put({ userId: location.state.id, name: name, email: email })\n\n    if(response.status == 200){\n      setToastMessage('Usuário atualizado com sucesso')\n      setShowToast(true)\n      history.push('/userslist')\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n          <IonToolbar>\n              <IonButtons slot=\"start\">\n                  <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n              </IonButtons>\n              <IonTitle class=\"text-center\">Editar Usuário</IonTitle>\n          </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      value={name}\n                      class=\"pl-2\"\n                      placeholder=\"Corte de cabelo\"\n                      onIonChange={(e: any) => setName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">E-mail</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      value={email}\n                      class=\"pl-2\"\n                      placeholder=\"Corta o cabelo\"\n                      onIonChange={(e: any) => setEmail(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n         <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={edit} shape=\"round\">Salvar</IonButton>\n        </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default UserEdit","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  IonContent,\n  IonPage,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonCard,\n  IonToast,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle,\n  IonCardContent,\n  IonIcon,\n  IonButton,\n  IonMenuButton,\n  IonFab,\n  IonFabButton,\n  IonButtons,\n  IonActionSheet,\n  IonList\n} from '@ionic/react';\nimport { filter, add, ellipsisVertical, trashOutline, createOutline } from 'ionicons/icons';\n\nimport * as service from '../../service/index'\n\nconst ServicesList: React.FC = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('')\n  const [showActionSheet, setShowActionSheet] = useState(false);\n  const [loading, setLoading] = useState(false)\n  const [services, setServices] = useState([])\n  const [refresh, setRefresh] = useState(false)\n  const history = useHistory()\n\n  useEffect(() => {\n    const getServices = async () => {\n      let response = await service.metron.service.get({ serviceId: '', page: '1', perPage: '100' })\n      setServices(response && response.data && response.data.services)\n    }\n\n    getServices()\n  }, [refresh])\n\n  const doRefresh = () => {\n    setRefresh(true)\n    setRefresh(false)\n  }\n\n  const edit = (service: any) => {\n    history.push('/service/edit', service)\n  }\n\n  const destroy = async (serviceId: any) => {\n    let response = await service.metron.service.destroy({ serviceId: serviceId })\n\n    if (response.status == 200) {\n      setToastMessage('Serviço excluído com sucesso')\n      setShowToast(true)\n      doRefresh()\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  const convertToDecimal = (price: any) => {\n    if(price == null) {\n      return\n    }\n    return price.toFixed(2).replace('.', ',')\n  }\n\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonButtons slot=\"primary\">\n            <IonButton>\n              <IonIcon icon={filter} />\n            </IonButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Serviços</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <IonGrid>\n          <IonList>\n            {services && services.map((service) => (\n              <IonCard key={service.id}>\n                <IonRow>\n                  <IonCol >\n                    <IonCardHeader>\n                      <IonCardTitle>{service.name}</IonCardTitle>\n                      <IonCardSubtitle>{service.duration} minutos</IonCardSubtitle>\n                      <IonCardSubtitle>R${convertToDecimal(service.price)}</IonCardSubtitle>\n                    </IonCardHeader>\n                  </IonCol>\n                  <IonFab horizontal=\"end\" vertical=\"top\">\n                    <IonButtons>\n                      <IonButton onClick={() => destroy(service.id)}>\n                        <IonIcon icon={trashOutline} />\n                      </IonButton>\n                      <IonButton onClick={() => edit(service)}>\n                        <IonIcon icon={createOutline} />\n                      </IonButton>\n                    </IonButtons>\n                  </IonFab>\n                </IonRow>\n              </IonCard>\n            ))}\n\n          </IonList>\n\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonFabButton routerLink=\"/services/new\">\n              <IonIcon icon={add} />\n            </IonFabButton>\n          </IonFab>\n\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default ServicesList","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst ServiceNew: React.FC = () => {\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [duration, setDuration] = useState('')\n  const [price, setPrice] = useState('')\n  const history = useHistory()\n\n  const create = async () => {\n    if (name.trim() === '' || description.trim() === '' || duration.trim() === '', price.trim() == '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if (Number(duration) < 30) {\n      setToastMessage('Duração deve ser maior ou igual 30 minutos')\n      return setShowToast(true)\n    }\n\n    let params = {\n      name: name,\n      description: description,\n      duration: duration,\n      price: price.replace(',', '.')\n    }\n\n    try {\n      let response = await service.metron.service.post(params)\n\n      setToastMessage('Serviço cadastrado com sucesso')\n      setShowToast(true)\n      history.push('/serviceslist')\n      history.go(0)\n    } catch (e) {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Cadastrar Serviço</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"Corte de cabelo\"\n                      onIonChange={(e: any) => setName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Descrição</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"Corta o cabelo\"\n                      onIonChange={(e: any) => setDescription(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Duração(em minutos)</IonLabel>\n                    <IonInput\n                      type=\"number\"\n                      mode=\"md\"\n                      inputMode=\"numeric\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"30\"\n                      onIonChange={(e: any) => setDuration(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Valor</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      inputMode=\"numeric\"\n                      required={true}\n                      class=\"pl-2\"\n                      placeholder=\"10,00\"\n                      onIonChange={(e: any) => setPrice(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n          <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={create} shape=\"round\">Cadastrar</IonButton>\n          </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default ServiceNew","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  IonContent,\n  IonItem,\n  IonPage,\n  IonInput,\n  IonLabel,\n  IonCard,\n  IonCardHeader,\n  IonGrid,\n  IonHeader,\n  IonToolbar,\n  IonButtons,\n  IonMenuButton,\n  IonTitle,\n  IonFab,\n  IonRow,\n  IonImg,\n  IonButton,\n  IonCol,\n  IonToast\n} from '@ionic/react'\n\nimport * as service from '../../service/index'\n\nconst ServiceEdit: React.FC = () => {\n  var location:any = useLocation()\n  const [showToast, setShowToast] = useState(false)\n  const [toastMessage, setToastMessage] = useState('')\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [duration, setDuration] = useState('')\n  const [price, setPrice] = useState('')\n  const history = useHistory()\n\n  useEffect(() => {\n    if(location.state) {\n      setName(location.state.name)\n      setDescription(location.state.description)\n      setDuration(location.state.duration)\n      setPrice(location.state.price.toFixed(2))\n    }\n  }, [location])\n\n  const edit = async () => {\n  \tconsole.log(duration)\n    if (name.trim() === '' || description.trim() === '' || String(duration).trim() === '', price.trim() == '') {\n      setToastMessage('Preencha todos os campos')\n      return setShowToast(true)\n    }\n\n    if (Number(duration) < 30) {\n      setToastMessage('Duração deve ser maior ou igual 30 minutos')\n      return setShowToast(true)\n    }\n\n    let response = await service.metron.service.put({ serviceId: location.state.id, name: name, description: description, duration: duration, price: price.replace(',', '.') })\n\n    if(response.status == 200){\n      setToastMessage('Serviço atualizado com sucesso')\n      setShowToast(true)\n      history.push('/serviceslist')\n      history.go(0)\n    } else {\n      setToastMessage('Algo de errado aconteceu')\n      setShowToast(true)\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader>\n          <IonToolbar>\n              <IonButtons slot=\"start\">\n                  <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n              </IonButtons>\n              <IonTitle class=\"text-center\">Editar Serviço</IonTitle>\n          </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonCard>\n            <IonCardHeader>\n              <IonRow>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Nome</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      value={name}\n                      class=\"pl-2\"\n                      placeholder=\"Corte de cabelo\"\n                      onIonChange={(e: any) => setName(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Descrição</IonLabel>\n                    <IonInput\n                      type=\"text\"\n                      mode=\"md\"\n                      value={description}\n                      class=\"pl-2\"\n                      placeholder=\"Corta o cabelo\"\n                      onIonChange={(e: any) => setDescription(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Duração(em minutos)</IonLabel>\n                    <IonInput\n                      type=\"number\"\n                      mode=\"md\"\n                      value={duration}\n                      class=\"pl-2\"\n                      placeholder=\"30\"\n                      onIonChange={(e: any) => setDuration(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n                <IonCol size=\"12\">\n                  <IonItem>\n                    <IonLabel position=\"floating\" class=\"input-text-color\">Preço</IonLabel>\n                    <IonInput\n                      type=\"number\"\n                      mode=\"md\"\n                      value={price}\n                      class=\"pl-2\"\n                      placeholder=\"30\"\n                      onIonChange={(e: any) => setPrice(e.target.value)} />\n                  </IonItem>\n                </IonCol>\n              </IonRow>\n            </IonCardHeader>\n          </IonCard>\n         <IonFab horizontal=\"end\" vertical=\"bottom\">\n            <IonButton onClick={edit} shape=\"round\">Salvar</IonButton>\n        </IonFab>\n        </IonGrid>\n        <IonToast\n          isOpen={showToast}\n          onDidDismiss={() => setShowToast(false)}\n          message={toastMessage}\n          duration={2000}\n        />\n      </IonContent>\n    </IonPage>\n  )\n}\n\nexport default ServiceEdit","import React from 'react';\nimport {\n  IonContent,\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonMenuButton,\n  IonButtons\n} from '@ionic/react';\n\nconst Settings: React.FC = () => {\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Configurações</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Settings","import React from 'react';\nimport {\n  IonContent,\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonMenuButton,\n  IonButtons\n} from '@ionic/react';\n\nconst Home: React.FC = () => {\n  return (\n    <IonPage>\n\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton auto-hide=\"false\"></IonMenuButton>\n          </IonButtons>\n          <IonTitle class=\"text-center\">Início</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Home","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n  IonMenu,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonList,\n  IonItem,\n  IonButton,\n  IonMenuButton\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { book, person, people, settings, document, briefcase, home, exit, key } from 'ionicons/icons';\nimport Login from './pages/login/Login';\nimport Register from './pages/login/Register';\nimport ClientsList from './pages/clients/ClientsList';\nimport ClientNew from './pages/clients/ClientNew';\nimport ClientEdit from './pages/clients/ClientEdit';\nimport EmployeesList from './pages/employees/EmployeesList';\nimport EmployeNew from './pages/employees/EmployeNew';\nimport EmployeEdit from './pages/employees/EmployeEdit';\nimport EmployeesFilter from './pages/employees/EmployeesFilter';\nimport Reports from './pages/reports/Reports';\nimport SchedulingList from './pages/scheduling/SchedulingList';\nimport SchedulingCreate from './pages/scheduling/SchedulingCreate';\nimport SchedulingEdit from './pages/scheduling/SchedulingEdit';\nimport UsersList from './pages/users/UsersList';\nimport UserNew from './pages/users/UserNew';\nimport UserEdit from './pages/users/UserEdit';\nimport ServicesList from './pages/services/ServicesList';\nimport ServiceNew from './pages/services/ServiceNew';\nimport ServiceEdit from './pages/services/ServiceEdit';\nimport Settings from './pages/settings/Settings';\nimport Home from './pages/home/Home';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport './assets/css/App.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonMenu side=\"start\" content-id=\"main-content\">\n      <IonHeader>\n        <IonToolbar >\n          <IonTitle>Metron</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          {/* <IonItem routerLink=\"/home\">\n            <IonIcon icon={home} slot=\"start\"></IonIcon>\n            <IonLabel>Início</IonLabel>\n          </IonItem> */}\n          <IonItem routerLink=\"/schedulinglist\">\n            <IonIcon icon={book} slot=\"start\"></IonIcon>\n            <IonLabel>Agendamentos</IonLabel>\n          </IonItem>\n          <IonItem routerLink='/clientslist'>\n            <IonIcon icon={person} slot=\"start\"></IonIcon>\n            <IonLabel>Clientes</IonLabel>\n          </IonItem>\n          <IonItem routerLink='/userslist'>\n            <IonIcon icon={key} slot=\"start\"></IonIcon>\n            <IonLabel>Usuários</IonLabel>\n          </IonItem>\n          <IonItem routerLink='/employeeslist'>\n            <IonIcon icon={people} slot=\"start\"></IonIcon>\n            <IonLabel>Funcionários</IonLabel>\n          </IonItem>\n          <IonItem routerLink=\"/serviceslist\">\n            <IonIcon icon={briefcase} slot=\"start\"></IonIcon>\n            <IonLabel>Serviços</IonLabel>\n          </IonItem>\n          <IonItem routerLink=\"/login\">\n            <IonIcon icon={exit} slot=\"start\"></IonIcon>\n            <IonLabel>Sair</IonLabel>\n          </IonItem>\n        </IonList>\n      </IonContent>\n    </IonMenu>\n    <div id=\"main-content\">\n      <IonHeader>\n        <IonToolbar>\n          <IonButton slot=\"start\">\n            <IonMenuButton></IonMenuButton>\n          </IonButton>\n          <IonTitle>Inbox</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent class=\"ion-padding\">\n        <IonButton expand=\"block\">Open Menu</IonButton>\n      </IonContent>\n    </div>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route path=\"/login\" component={Login} exact={true} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/clientslist\" component={ClientsList} />\n        <Route path=\"/clients/new\" component={ClientNew} />\n        <Route path=\"/clients/edit\" component={ClientEdit} />\n        <Route path=\"/employeeslist\" component={EmployeesList} />\n        <Route path=\"/employes/new\" component={EmployeNew} />\n        <Route path=\"/employes/edit\" component={EmployeEdit} />\n        <Route path=\"/employeesfilter\" component={EmployeesFilter} />\n        <Route path=\"/reports\" component={Reports} />\n        <Route path=\"/userslist\" component={UsersList} />\n        <Route path=\"/users/new\" component={UserNew} />\n        <Route path=\"/user/edit\" component={UserEdit} />\n        <Route path=\"/serviceslist\" component={ServicesList} />\n        <Route path=\"/services/new\" component={ServiceNew} />\n        <Route path=\"/service/edit\" component={ServiceEdit} />\n        <Route path=\"/schedulinglist\" component={SchedulingList} />\n        <Route path=\"/schedulingcreate\" component={SchedulingCreate} />\n        <Route path=\"/schedulingedit\" component={SchedulingEdit} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/\" render={() => <Redirect to=\"/login\" />} exact={true} />\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t135,\n\t\t6\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t136,\n\t\t7\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t137,\n\t\t8\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t138,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t139,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t140,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t141,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t142,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t143,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t144,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t145,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t146,\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t147,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t148,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t149,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t150,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t151,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t152,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t153,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t154,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t155,\n\t\t9\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t156,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t157,\n\t\t10\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t158,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t159,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t160,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t161,\n\t\t12\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t162,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t163,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t164,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t165,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t166,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t167,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t168,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t169,\n\t\t14\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t170,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t171,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t172,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t173,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t174,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t175,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t176,\n\t\t13\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t177,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 83;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t179,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 85;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}